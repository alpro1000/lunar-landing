name: UI Tests

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/test-ui.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/test-ui.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test -- --runInBand

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Smoke test lunar API
        run: |
          npm run dev -- --hostname 0.0.0.0 --port 3000 > .next-dev.log 2>&1 &
          NEXT_PID=$!
          cleanup() {
            kill $NEXT_PID 2>/dev/null || true
            wait $NEXT_PID 2>/dev/null || true
          }
          trap cleanup EXIT

          for i in {1..30}; do
            if curl -sf http://localhost:3000/api/lunar > /tmp/lunar.json; then
              break
            fi
            sleep 2
          done

          if [ ! -s /tmp/lunar.json ]; then
            echo "Failed to reach lunar API"
            cat .next-dev.log || true
            exit 1
          fi

          npx ts-node -e "fetch('http://localhost:3000/api/lunar').then(r=>r.json()).then(data=>{if(!data?.date||!data?.phase||typeof data?.illumination==='undefined'){throw new Error('Invalid lunar payload');}console.log(data);})"

      - name: Run E2E tests
        env:
          CI: 'true'
        run: npm run e2e
